# Docker Compose for Bike Surface AI Cloud Infrastructure
version: '3.8'

services:
  # PostgreSQL Database with PostGIS
  database:
    image: postgis/postgis:15-3.3
    container_name: bike_surface_db
    environment:
      POSTGRES_DB: bike_surface_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme123}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./cloud/db/schema.sql:/docker-entrypoint-initdb.d/01_schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - bike_surface_network

  # FastAPI Backend
  api:
    build:
      context: ./cloud/api
      dockerfile: Dockerfile
    container_name: bike_surface_api
    environment:
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD:-changeme123}@database:5432/bike_surface_db
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - bike_surface_network
    volumes:
      - ./cloud/api:/app

  # Nginx Web Server (serves frontend)
  web:
    image: nginx:alpine
    container_name: bike_surface_web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./cloud/web:/usr/share/nginx/html:ro
      - ./cloud/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - bike_surface_network

volumes:
  postgres_data:
    driver: local

networks:
  bike_surface_network:
    driver: bridge
